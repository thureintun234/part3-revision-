{"version":3,"sources":["Components/Notes.js","Components/Services/notes.js","Components/Notification.js","Components/Footer.js","Components/Recipe.js","Components/Sample.js","App.js","index.js"],"names":["Notes","note","toggleImportant","label","important","className","content","onClick","baseUrl","axios","get","then","response","data","newObject","post","id","put","Notification","message","Footer","style","color","fontStyle","fontSize","Recipe","props","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","console","log","noteService","initialNotes","length","notesToShow","filter","map","find","n","changedNote","returnNote","catch","error","alert","setTimeout","onSubmit","event","preventDefault","target","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","type","Sample","App","ReactDOM","render","document","getElementById"],"mappings":"yNAceA,MAZf,YAAwC,IAAxBC,EAAuB,EAAvBA,KAAKC,EAAkB,EAAlBA,gBACXC,EAAQF,EAAKG,UAAY,qBAAuB,iBACtD,OACI,mCACI,qBAAIC,UAAU,OAAd,UACKJ,EAAKK,QACN,wBAAQC,QAASL,EAAjB,SAAmCC,UCP7CK,EAAU,kCAiBD,EAfA,WAEb,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa5B,EAVA,SAAAC,GAEb,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ5B,EALA,SAACG,EAAIF,GAElB,OADgBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCH1BK,EAZI,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OAAgB,OAAZA,EACK,KAIP,qBAAKd,UAAU,QAAf,SACGc,KCOQC,EAdF,WAMX,OACE,sBAAKC,MANa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,IAGV,UACE,uBACA,2GCwFOC,MAzFf,SAAgBC,GAAQ,IAAD,EACKC,mBAAS,IADd,mBACbC,EADa,KACPC,EADO,OAESF,mBAAS,IAFlB,mBAEbG,EAFa,KAELC,EAFK,OAGSJ,oBAAS,GAHlB,mBAGbK,EAHa,KAGLC,EAHK,OAImBN,mBAAS,0BAJ5B,mBAIbO,EAJa,KAIAC,EAJA,KA4BpBC,qBAAU,WACNC,QAAQC,IAAI,UACXC,IACS5B,MAAK,SAAA6B,GACFX,EAASW,QAExB,IACFH,QAAQC,IAAI,SAASV,EAAMa,OAAO,SAGlC,IAAMC,EAAcV,EAAUJ,EAAQA,EAAMe,QAAO,SAAA1C,GAAI,OAAuB,IAAnBA,EAAKG,aA2B/D,OACI,gCACI,uCACA,cAAC,EAAD,CAAce,QAASe,IACvB,8BACI,yBAAQ3B,QAAS,kBAAM0B,GAAYD,IAAnC,kBACUA,EAAU,YAAc,WAGtC,6BAEQU,EAAYE,KAAI,SAAA3C,GAAI,OAAI,cAAC,EAAD,CAAqBA,KAAMA,EAC/CC,gBAAiB,kBAtEd,SAAAc,GACd,sCAAkCA,GAA3C,IACMf,EAAO2B,EAAMiB,MAAK,SAAAC,GAAC,OAAIA,EAAE9B,KAAOA,KAChC+B,EAAW,2BAAQ9C,GAAR,IAAcG,WAAYH,EAAKG,YAEhDmC,EAAmBvB,EAAG+B,GAAapC,MAAK,SAAAqC,GACtCnB,EAASD,EAAMgB,KAAI,SAAA3C,GAAI,OAAIA,EAAKe,KAAOA,EAAKf,EAAO+C,SAGpDC,OAAM,SAAAC,GACHC,MAAM,aAAD,OACYlD,EAAKK,QADjB,sCAGL8C,YAAW,WACPjB,EAAgB,QAClB,KACFN,EAASD,EAAMe,QAAO,SAAAG,GAAC,OAAGA,EAAE9B,KAAOA,SAsDId,CAAgBD,EAAKe,MADZf,EAAKe,SAIjD,uBAAMqC,SAvCC,SAACC,GACbA,EAAMC,iBACNlB,QAAQC,IAAI,iBAAiBgB,EAAME,QAEnC,IAAMC,EAAa,CACfnD,QAAQwB,EACR4B,MAAK,IAAIC,MAAOC,cAChBxD,UAAUyD,KAAKC,SAAS,IAG/BvB,EAAmBkB,GACV9C,MAAK,SAAAqC,GACFnB,EAASD,EAAMmC,OAAOf,IACtBjB,EAAW,QA0Bf,UACI,uBAAOiC,MAAOlC,EAASmC,SArBX,SAACX,GAEtBvB,EAAWuB,EAAME,OAAOQ,UAoBf,wBAAQE,KAAK,SAAb,qBAEJ,cAAC,EAAD,QC7DGC,MA5Bf,WAqBI,OACI,8BACI,cAAC,EAAD,CAAQvC,MAtBF,CACV,CACIZ,GAAI,EACJV,QAAS,eACToD,KAAM,2BACNtD,WAAW,GAEf,CACIY,GAAI,EACJV,QAAS,sCACToD,KAAM,2BACNtD,WAAW,GAEf,CACIY,GAAI,EACJV,QAAS,+DACToD,KAAM,2BACNtD,WAAW,SCRRgE,MATf,WAEE,OACE,qBAAK/D,UAAU,MAAf,SACE,cAAC,EAAD,OCHNgE,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,U","file":"static/js/main.a91e8c22.chunk.js","sourcesContent":["import React from 'react'\n\nfunction Notes({note,toggleImportant}) {\n    const label = note.important ? 'make not important' : 'make important'\n    return (\n        <>\n            <li className=\"note\">\n                {note.content}\n                <button onClick={toggleImportant}>{label}</button> \n            </li>\n        </>\n    )\n}\n\nexport default Notes\n","import axios from 'axios'\nconst baseUrl = 'http://localhost:3001/api/notes'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update }","const Notification = ({ message }) => {\n    if (message === null) {\n      return null\n    }\n  \n    return (\n      <div className=\"error\">\n        {message}\n      </div>\n    )\n  }\n\n  export default Notification","const Footer = () => {\n    const footerStyle = {\n      color: 'green',\n      fontStyle: 'italic',\n      fontSize: 16\n    }\n    return (\n      <div style={footerStyle}>\n        <br />\n        <em>Note app, Department of Computer Science, University of Helsinki 2020</em>\n      </div>\n    )\n  }\n\n  export default Footer","import axios from 'axios'\nimport React, { useState,useEffect } from 'react'\nimport Notes from './Notes'\nimport noteService from './Services/notes'\nimport '../index.css'\nimport Notification from './Notification'\nimport Footer from './Footer'\n\nfunction Recipe(props) {\n   const [notes,setNotes] = useState([])\n   const [newNote,setNewNote] = useState('')\n   const [showAll,setShowAll] = useState(true)\n   const [errorMessage,setErrorMessage] = useState('some error happened...')\n\n   //toggle button for making note's important or not\n   const toggleImportant = id => {\n    const url = `http://localhost:3001/notes/${id}`\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n  \n    noteService.update(id,changedNote).then(returnNote => {\n      setNotes(notes.map(note => note.id !== id ? note : returnNote))\n    })\n\n    .catch(error => {\n        alert(\n            `the note '${note.content}' was already deleted from server`\n        )\n        setTimeout(() => {\n            setErrorMessage(null)\n        },5000)\n        setNotes(notes.filter(n=> n.id !== id))\n    })\n  }\n\n   //fetching data from local json server\n   useEffect(() => {\n       console.log('effect')\n        noteService.getAll()\n                .then(initialNotes => {\n                    setNotes(initialNotes)\n                })\n   },[])\n   console.log('render',notes.length,'times')\n\n   //filter note's important value\n   const notesToShow = showAll ? notes : notes.filter(note => note.important === true)\n\n    //submit form for add new value\n   const addNote = (event) => {\n       event.preventDefault()\n       console.log('Button clicked',event.target)\n\n       const noteObject = {\n           content:newNote,\n           date:new Date().toISOString(),\n           important:Math.random()<0.5,\n       }\n\n    noteService.create(noteObject)\n            .then(returnNote => {\n                setNotes(notes.concat(returnNote))\n                setNewNote('')\n            })   \n\n   }\n\n   //input handle change\n   const handleChangeNote = (event) => {\n    //    console.log(event.target.value)\n       setNewNote(event.target.value)\n   }\n\n    return (\n        <div>\n            <h1>Notes</h1>\n            <Notification message={errorMessage} />\n            <div>\n                <button onClick={() => setShowAll(!showAll)}>\n                    show {showAll ? 'important' : 'all'}\n                </button>\n            </div>\n            <ul>\n                {\n                    notesToShow.map(note => <Notes key={note.id} note={note}\n                        toggleImportant={() => toggleImportant(note.id)} />)\n                }\n            </ul>\n            <form onSubmit={addNote}>\n                <input value={newNote} onChange={handleChangeNote} />\n                <button type=\"submit\">save</button>\n            </form>\n            <Footer />\n        </div>\n    )\n}\n\nexport default Recipe\n","import React from 'react'\nimport Recipe from './Recipe'\n\nfunction Sample() {\n    const notes = [\n        {\n            id: 1,\n            content: 'HTML is easy',\n            date: '2019-05-30T17:30:31.098Z',\n            important: true\n        },\n        {\n            id: 2,\n            content: 'Browser can execute only Javascript',\n            date: '2019-05-30T18:39:34.091Z',\n            important: false\n        },\n        {\n            id: 3,\n            content: 'GET and POST are the most important methods of HTTP protocol',\n            date: '2019-05-30T19:20:14.298Z',\n            important: true\n        }\n    ]\n    return (\n        <div>\n            <Recipe notes={notes} />\n        </div>\n    )\n}\n\nexport default Sample\n","import './App.css';\nimport Sample from './Components/Sample';\n// import axios from 'axios'\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <Sample />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n"],"sourceRoot":""}